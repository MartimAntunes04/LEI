//Ficha 10

//ex3
CREATE TABLE AUTORES2(
    CODIGO_AUTOR NUMBER(4,0),
    NOME VARCHAR2(30 BYTE),
    N_CONTRIBUINTE NUMBER(9,0),
    MORADA VARCHAR2 (80 BYTE),
    IDADE NUMBER(4,0),
    SEXO CHAR(1 BYTE),
    NACIONALIDADE VARCHAR2(20 BYTE),
    GENERO_PREFERIDO VARCHAR2(20 BYTE),
    CONSTRAINT nome_maiscula CHECK (NOME = UPPER(NOME)),
    CONSTRAINT idade CHECK (IDADE between 0 and 200)

)
EXEC SQLCHECK('FJURGEYCRPWBCQL');
//ex4
CREATE TABLE AVALIACOES(
    NOTA NUMBER(1,0),
    CODIGO_LIVRO NUMBER(4,0),
    CODIGO_CLIENTE NUMBER(4,0),
    CONSTRAINT estrelas CHECK(NOTA between 1 and 5),
    CONSTRAINT cod_livro_fk FOREIGN KEY (CODIGO_LIVRO)
        REFERENCES LIVROS(CODIGO_LIVRO),
    CONSTRAINT cod_cliente_fk FOREIGN KEY (CODIGO_CLIENTE)
        REFERENCES CLIENTES(CODIGO_CLIENTE)
)
EXEC SQLCHECK('FJPJGYEDBOGCGUG');
//ex5
CREATE TABLE LIVROS_BACKUP AS
SELECT
    CODIGO_LIVRO,
    CODIGO_EDITORA,
    CODIGO_AUTOR,
    TITULO,
    ISBN,
    UPPER(GENERO) AS GENERO,
    PRECO_TABELA,
    PAGINAS,
    QUANT_EM_STOCK,
    UNIDADES_VENDIDAS,
    DATA_EDICAO
FROM LIVROS;


//ex6
ALTER TABLE LIVROS_BACKUP
ADD 
(CONSTRAINT cod_editora_fk FOREIGN KEY (CODIGO_EDITORA)
    REFERENCES EDITORAS(CODIGO_EDITORA),
    
CONSTRAINT cod_autor_fk FOREIGN KEY(CODIGO_AUTOR)
    REFERENCES AUTORES(CODIGO_AUTOR),
    
CONSTRAINT cod_livro_pk PRIMARY KEY(CODIGO_LIVRO)   
)
EXEC SQLCHECK('FJTVXTKFXANHWRJ');

//ex7
INSERT INTO LIVROS_BACKUP(CODIGO_LIVRO,CODIGO_EDITORA,CODIGO_AUTOR,TITULO,ISBN,GENERO,PRECO_TABELA,PAGINAS,UNIDADES_VENDIDAS,DATA_EDICAO)
VALUES(51,1,1,'Informátics para todos', 132434,'Infromática',24,430,0,to_char(sysdate,'YYYY-MM-DD'));


//ex8
INSERT INTO AUTORES2(CODIGO_AUTOR,NOME,N_CONTRIBUINTE)
VALUES(45,'JOSÉ DE MAGALHÃES',77665544);

//ex9
DELETE FROM LIVROS_BACKUP
WHERE CODIGO_LIVRO=51;

//ex10
UPDATE LIVROS_BACKUP
SET preco_tabela=preco_tabela+ preco_tabela*0.10
WHERE genero= UPPER('Aventura');

//ex11
DELETE FROM LIVROS_BACKUP
WHERE genero= UPPER('Informática')
and preco_tabela < (
select AVG(preco_tabela)
from livros_backup);

//ex12
CREATE TABLE AUTORES_BACKUP AS
SELECT
    CODIGO_AUTOR,
    NOME,
    N_CONTRIBUINTE,
    MORADA,
    IDADE,
    SEXO,
    NACIONALIDADE,
    GENERO_PREFERIDO
    FROM AUTORES;


//ex13
ALTER TABLE AUTORES_BACKUP
ADD NLIVROS NUMBER(4,0) DEFAULT 0 NOT NULL
CONSTRAINT num_livros CHECK(NLIVROS between 0 and 150);

//ex14
UPDATE AUTORES_BACKUP A
SET NLIVROS = (
SELECT COUNT(*)
from LIVROS L
where l.codigo_autor = A.codigo_autor
);

//ex15
UPDATE AUTORES_BACKUP A
SET GENERO_PREFERIDO = (
    SELECT G.GENERO
    FROM (
        SELECT L.CODIGO_AUTOR, L.GENERO, RANK() OVER (PARTITION BY L.CODIGO_AUTOR ORDER BY COUNT(*) DESC) AS RN
        FROM LIVROS L
        JOIN AUTORES_BACKUP A ON L.CODIGO_AUTOR = A.CODIGO_AUTOR
        WHERE A.IDADE < 50
        GROUP BY L.CODIGO_AUTOR, L.GENERO
    )G
     WHERE A.CODIGO_AUTOR = G.CODIGO_AUTOR AND G.RN = 1
);

//ex16
CREATE TABLE EDITORAS_BACKUP AS
SELECT 
    CODIGO_EDITORA,
    NOME,
    N_CONTRIBUINTE,
    MORADA,
    TELEFONE,
    FAX
FROM EDITORAS;

//ex17
DROP TABLE EDITORAS_BACKUP;

//ex18
ALTER TABLE LIVROS_BACKUP
ADD EDICAO NUMBER(7,0);

//ex19
UPDATE LIVROS_BACKUP A
SET A.UNIDADES_VENDIDAS =(
    SELECT SUM(VENDAS.QUANTIDADE)
    FROM VENDAS 
    WHERE VENDAS.CODIGO_LIVRO = A.CODIGO_LIVRO
);


//ex21
CREATE TABLE VENDAS_BACKUP AS
SELECT
    CODIGO_VENDA,
    DATA_VENDA,
    CODIGO_CLIENTE,
    CODIGO_LIVRO,
    PRECO_UNITARIO,
    QUANTIDADE,
    TOTAL_VENDA
FROM VENDAS;

//ex20
UPDATE VENDAS_BACKUP
SET TOTAL_VENDA = QUANTIDADE * PRECO_UNITARIO;


//ex22
DELETE FROM VENDAS_BACKUP
WHERE to_char(DATA_VENDA,'MM')= '01';

//ex23
DELETE FROM VENDAS_BACKUP
WHERE (CODIGO_LIVRO, DATA_VENDA) IN (
    SELECT CODIGO_LIVRO, DATA_VENDA
    FROM (
        SELECT VB.CODIGO_LIVRO, VB.DATA_VENDA,
               ROW_NUMBER() OVER (PARTITION BY VB.CODIGO_LIVRO ORDER BY L.PRECO_TABELA DESC) AS RN
        FROM VENDAS_BACKUP VB
        JOIN LIVROS L ON VB.CODIGO_LIVRO = L.CODIGO_LIVRO
        JOIN AUTORES A ON L.CODIGO_AUTOR = A.CODIGO_AUTOR
        WHERE A.NOME = 'Sérgio Sousa'
    ) Subquery
    WHERE RN = 1
);
