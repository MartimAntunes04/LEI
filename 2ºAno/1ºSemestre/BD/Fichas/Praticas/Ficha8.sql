//Ficha8

//ex3
SELECT A.NOME, L.TITULO,
  (
    SELECT COUNT(L2.CODIGO_LIVRO)
    FROM LIVROS L2
    JOIN AUTORES A2 ON L2.CODIGO_AUTOR = A2.CODIGO_AUTOR
    JOIN EDITORAS E2 ON E2.CODIGO_EDITORA = L2.CODIGO_EDITORA
    WHERE A2.NOME = A.NOME
      AND lower(E2.NOME) LIKE '%porto%editora%'
    
  ) LIVROS_PORTO_EDITORA,
  (
    SELECT COUNT(L2.CODIGO_LIVRO)
    FROM LIVROS L2
    JOIN AUTORES A2 ON L2.CODIGO_AUTOR = A2.CODIGO_AUTOR
    WHERE A2.NOME = A.NOME
  ) TOTAL_DE_LIVROS
FROM AUTORES A
JOIN LIVROS L ON A.CODIGO_AUTOR = L.CODIGO_AUTOR 
JOIN EDITORAS E ON E.CODIGO_EDITORA = L.CODIGO_EDITORA
WHERE L.PRECO_TABELA = (
                        SELECT MIN(L.PRECO_TABELA) FROM LIVROS L
                        JOIN EDITORAS E ON E.CODIGO_EDITORA = L.CODIGO_EDITORA
                        WHERE lower(E.NOME) LIKE '%porto%editora%'
                      );
                      
 EXEC SQLCHECK('FHPIETTCGQOCKNR');   
//ex4
SELECT 
      A.NOME,
      COALESCE(SUM(CASE WHEN L.GENERO = A.GENERO_PREFERIDO THEN 1 ELSE 0 END), 0) AS "Genero Preferido",
      COALESCE(COUNT(L.CODIGO_LIVRO), 0) AS "Total de Livros"
FROM AUTORES A
LEFT JOIN LIVROS L ON A.CODIGO_AUTOR = L.CODIGO_AUTOR
GROUP BY A.NOME, A.GENERO_PREFERIDO
ORDER BY A.NOME;

EXEC SQLCHECK('FHFMLMIDVHAALUN');

//ex5
WITH EMV AS (
  SELECT *
  FROM (
    SELECT
      E.NOME,
      E.CODIGO_EDITORA,
      COALESCE(SUM(L.UNIDADES_VENDIDAS), 0) AS TOTAL_UNIDADES_VENDIDAS
    FROM 
      EDITORAS E
    JOIN 
      LIVROS L ON E.CODIGO_EDITORA = L.CODIGO_EDITORA
    GROUP BY E.NOME, E.CODIGO_EDITORA
    ORDER BY TOTAL_UNIDADES_VENDIDAS DESC
  )
  WHERE ROWNUM <= 1
)

SELECT
  'O autor ' || A.NOME || ' escreveu ' ||
  COALESCE(COUNT(L.CODIGO_LIVRO), 0) || ' de ' ||
  COALESCE(SUB.TOTAL_LIVROS_AUTOR, 0) ||
  ' livros para a editora ' || EMV.NOME || '.' RESULTADO
FROM 
  EMV
JOIN 
  LIVROS L ON L.CODIGO_EDITORA = EMV.CODIGO_EDITORA
JOIN 
  AUTORES A ON A.CODIGO_AUTOR = L.CODIGO_AUTOR
LEFT JOIN (
  SELECT
    A.CODIGO_AUTOR,
    COALESCE(COUNT(L2.CODIGO_LIVRO), 0) AS TOTAL_LIVROS_AUTOR
  FROM LIVROS L2
    JOIN AUTORES A ON A.CODIGO_AUTOR = L2.CODIGO_AUTOR
  GROUP BY A.CODIGO_AUTOR
) SUB ON SUB.CODIGO_AUTOR = A.CODIGO_AUTOR
GROUP BY A.NOME, EMV.NOME, SUB.TOTAL_LIVROS_AUTOR
ORDER BY A.NOME;
EXEC SQLCHECK('FHQVHSKECGWIMOH');


//ex6
SELECT * FROM (
  SELECT
     'top ' || RANK() OVER (ORDER BY SUM(V.QUANTIDADE) DESC) AS TOP,
    L.TITULO, 
    SUM(V.QUANTIDADE) SOMA
  FROM LIVROS L
  JOIN 
    VENDAS V ON V.CODIGO_LIVRO = L.CODIGO_LIVRO
  WHERE EXTRACT( YEAR FROM DATA_VENDA ) = EXTRACT ( YEAR FROM SYSDATE ) - 1
  GROUP BY L.TITULO, 'top ' || ROWNUM
  ORDER BY SOMA DESC
) WHERE ROWNUM <= 3;
EXEC SQLCHECK('FHFMHGHFGBZWNSR');


//ex7
select
 C.NOME,
    L.TITULO,
    TO_CHAR(RANKED_VENDAS.DATA_VENDA, 'DD-MM-YYYY') DATA_DA_VENDA
FROM (
    SELECT
        V.CODIGO_CLIENTE,
        V.CODIGO_LIVRO,
        V.DATA_VENDA,
        ROW_NUMBER() OVER (PARTITION BY V.CODIGO_CLIENTE ORDER BY V.DATA_VENDA DESC) AS RN
    FROM VENDAS V
) RANKED_VENDAS
JOIN CLIENTES C ON RANKED_VENDAS.CODIGO_CLIENTE = C.CODIGO_CLIENTE
JOIN LIVROS L ON RANKED_VENDAS.CODIGO_LIVRO = L.CODIGO_LIVRO
WHERE RN = 1
ORDER BY C.NOME;
EXEC SQLCHECK('FHQSWMFGQHNBOVG');

//ex8
SELECT
    VM.AnoMes AS Mes,
    VM.QuantidadeTotal AS Vendas_Do_Mes,
    NVL(VA.QuantidadeTotal, 0) AS Vendas_Do_Mes_Anterior,
    CASE
        WHEN VA.QuantidadeTotal IS NOT NULL THEN
            ROUND((VM.QuantidadeTotal - VA.QuantidadeTotal) / VA.QuantidadeTotal * 100, 2)
        ELSE
            NULL
    END AS Variacao_Percent
FROM (
    SELECT
        TO_CHAR(Data_Venda, 'YYYY/MM') AS AnoMes,
        SUM(Quantidade) AS QuantidadeTotal
    FROM
        Vendas
    GROUP BY
        TO_CHAR(Data_Venda, 'YYYY/MM')
) VM
LEFT JOIN (
    SELECT
        TO_CHAR(add_months(Data_Venda, 1), 'YYYY/MM') AS AnoMes,
        SUM(Quantidade) AS QuantidadeTotal
    FROM
        Vendas
    GROUP BY
        TO_CHAR(add_months(Data_Venda, 1), 'YYYY/MM')
) VA ON VM.AnoMes = VA.AnoMes
WHERE
    VA.QuantidadeTotal IS NOT NULL
    AND (VM.QuantidadeTotal - VA.QuantidadeTotal) / VA.QuantidadeTotal * 100 < -50
ORDER BY
    VM.AnoMes;
EXEC SQLCHECK('FHNFTPUHLPYZPFU');
